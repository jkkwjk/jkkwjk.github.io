<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>记redis序列化配置导致increment报错</title>
    <link href="/2022/05/13/%E8%AE%B0redis%E5%BA%8F%E5%88%97%E5%8C%96%E9%85%8D%E7%BD%AE%E5%AF%BC%E8%87%B4increment%E6%8A%A5%E9%94%99/"/>
    <url>/2022/05/13/%E8%AE%B0redis%E5%BA%8F%E5%88%97%E5%8C%96%E9%85%8D%E7%BD%AE%E5%AF%BC%E8%87%B4increment%E6%8A%A5%E9%94%99/</url>
    
    <content type="html"><![CDATA[<p>无语死，项目中只配置了<code>keySerializer</code>没有配<code>ValueSerializer</code> </p><p><img src="https://cdn.jsdelivr.net/gh/jkkwjk/img/202205131111974.png"></p><p>导致<code>increment</code>不能自增</p><blockquote><p>PS: increment只能在StringRedisSerializer中使用</p></blockquote><p>但因为redis已经存在众多采用<code>JdkSerializationRedisSerializer</code>序列化的Value，更改上线后会导致已存在Value读取失败，无解，只能采用最原始的<code>connection</code>方式<code>increment</code></p>]]></content>
    
    
    <categories>
      
      <category>redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>redis</tag>
      
      <tag>serialize</tag>
      
      <tag>deserialize</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo+github action 自动部署</title>
    <link href="/2022/05/10/hexo-github-action-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/"/>
    <url>/2022/05/10/hexo-github-action-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Github Actions可以很方便的实现 CI&#x2F;CD 工作流，来帮助我们完成自动打包部署测试等操作，本文将介绍利用Github Action实现Hexo文章发布即构建，并且使文章源码私有不可见。</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><h5 id="所需代码仓库"><a href="#所需代码仓库" class="headerlink" title="所需代码仓库"></a>所需代码仓库</h5><ul><li>一个私有仓库用以放置Hexo源码</li><li>一个以 <strong>&lt;用户名&gt;.github.io命名</strong> 的公有仓库</li></ul><h5 id="生成部署密钥"><a href="#生成部署密钥" class="headerlink" title="生成部署密钥"></a>生成部署密钥</h5><p>一直按回车直到生成成功</p><blockquote><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">$ ssh-keygen -f github-deploy-key<br></code></pre></td></tr></table></figure></blockquote><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h5 id="设置私有仓库的Actions-secrets"><a href="#设置私有仓库的Actions-secrets" class="headerlink" title="设置私有仓库的Actions secrets"></a>设置私有仓库的Actions secrets</h5><p>在 <code>Name</code> 中填 <code>HEXO_DEPLOY_SECRET </code> ，<code>Value</code> 中填 <code>github-deploy-key</code> 文件中的内容</p><p><img src="https://cdn.jsdelivr.net/gh/jkkwjk/img/202205101818442.png"></p><h5 id="设置公有仓库的Deploy-keys"><a href="#设置公有仓库的Deploy-keys" class="headerlink" title="设置公有仓库的Deploy keys"></a>设置公有仓库的Deploy keys</h5><p>在 <code>Key</code> 中填 <code>github-deploy-key.pub</code> 文件中的内容</p><p><img src="https://cdn.jsdelivr.net/gh/jkkwjk/img/202205101823134.png"></p><h5 id="编写Github-Action"><a href="#编写Github-Action" class="headerlink" title="编写Github Action"></a>编写Github Action</h5><p>在Hexo目录中创建 <code>.github/workflows/hexo_deploy.yml</code>，内容如下<strong>（注意需要替换邮箱和用户名）</strong>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">HEXO_DEPLOY</span><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">master</span><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">strategy:</span><br>      <span class="hljs-attr">matrix:</span><br>        <span class="hljs-attr">node-version:</span> [<span class="hljs-number">14.</span><span class="hljs-string">x</span>]<br><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v1</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Use</span> <span class="hljs-string">Node.js</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">matrix.node-version</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v1</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">version:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">matrix.node-version</span> <span class="hljs-string">&#125;&#125;</span><br>      <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">hexo</span><br>        <span class="hljs-attr">env:</span><br>          <span class="hljs-attr">ACTION_DEPLOY_KEY:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.HEXO_DEPLOY_SECRET</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          mkdir -p ~/.ssh/</span><br><span class="hljs-string">          echo &quot;$ACTION_DEPLOY_KEY&quot; &gt; ~/.ssh/id_rsa</span><br><span class="hljs-string">          chmod 600 ~/.ssh/id_rsa</span><br><span class="hljs-string">          ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span><br><span class="hljs-string">          git config --global user.email &quot;&lt;你的邮箱&gt;&quot;</span><br><span class="hljs-string">          git config --global user.name &quot;&lt;你的用户名&gt;&quot;</span><br><span class="hljs-string">          npm install hexo-cli -g</span><br><span class="hljs-string">          npm install</span><br><span class="hljs-string"></span>      <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">deploy</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          hexo clean</span><br><span class="hljs-string">          hexo d</span><br></code></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>写一篇文章push到github上，可以看到 <code>Github Action</code> 开始执行，在公有仓库中可以看到commit日期更新，部署成功</p><p><img src="https://cdn.jsdelivr.net/gh/jkkwjk/img/202205101831422.png"></p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>github action</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Home Assistant 接入Aqara插座功率</title>
    <link href="/2022/04/24/Home-Assistant-%E6%8E%A5%E5%85%A5Aqara%E6%8F%92%E5%BA%A7%E5%8A%9F%E7%8E%87/"/>
    <url>/2022/04/24/Home-Assistant-%E6%8E%A5%E5%85%A5Aqara%E6%8F%92%E5%BA%A7%E5%8A%9F%E7%8E%87/</url>
    
    <content type="html"><![CDATA[<h5 id="投影接入米家问题"><a href="#投影接入米家问题" class="headerlink" title="投影接入米家问题"></a>投影接入米家问题</h5><p>买的是极米的投影仪，本来想着买来配个红外网关可以跟米家联动，买回来发现是蓝牙遥控器，接不进米家，于是只能换个思路，用智能插座的功率来检测投影仪的状态。</p><h5 id="接入方式"><a href="#接入方式" class="headerlink" title="接入方式"></a>接入方式</h5><p>插座用的是绿米aqara智能插座</p><blockquote><p>lumi.ctrl_86plug.aq1</p></blockquote><p>先安装<a href="https://hacs.xyz/">HACS</a>再找到<strong>Xiaomi Miot Auto</strong>，按步骤提示安装重启即可，加入aqara插座之后默认没有功率显示的，需要在<u>configuration.yaml</u>中加入下列配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">xiaomi_miot:</span><br>  <span class="hljs-attr">device_customizes:</span><br>    <span class="hljs-attr">lumi.ctrl_86plug.aq1:</span><br>      <span class="hljs-attr">miio_cloud_props:</span> <span class="hljs-string">load_power</span><br></code></pre></td></tr></table></figure><p>再次重启可以看到实体属性中出现了<code>Prop.load power</code>属性</p><p><img src="https://cdn.jsdelivr.net/gh/jkkwjk/img/202204251729412.png"></p><h5 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h5><p>插件采用轮询米家服务器的方式来更新功率，所以刷新不能及时，可以在home-assistant中的<code>配置-&gt;自定义-&gt;实体</code>为需要更改刷新频率的实体增加属性<code>Interval seconds: 10</code>表示改实体10s刷新一次，</p><p>在<u>configuration.yaml</u>中加入</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">homeassistant:</span><br>  <span class="hljs-attr">customize:</span> <span class="hljs-type">!include</span> <span class="hljs-string">customize.yaml</span><br></code></pre></td></tr></table></figure><p>启用自定义实体基本可以满则投影开启拉窗帘关灯的自动化</p>]]></content>
    
    
    <categories>
      
      <category>IOT</category>
      
    </categories>
    
    
    <tags>
      
      <tag>home-assistant</tag>
      
      <tag>aqara</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
